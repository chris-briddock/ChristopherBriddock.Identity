### YamlMime:XRefMap
sorted: true
references:
- uid: ChristopherBriddock.Service.Common.Constants
  name: ChristopherBriddock.Service.Common.Constants
  href: api/ChristopherBriddock.Service.Common.Constants.html
  commentId: N:ChristopherBriddock.Service.Common.Constants
  fullName: ChristopherBriddock.Service.Common.Constants
  nameWithType: ChristopherBriddock.Service.Common.Constants
- uid: ChristopherBriddock.Service.Common.Constants.CorsConstants
  name: CorsConstants
  href: api/ChristopherBriddock.Service.Common.Constants.CorsConstants.html
  commentId: T:ChristopherBriddock.Service.Common.Constants.CorsConstants
  fullName: ChristopherBriddock.Service.Common.Constants.CorsConstants
  nameWithType: CorsConstants
- uid: ChristopherBriddock.Service.Common.Constants.CorsConstants.PolicyName
  name: PolicyName
  href: api/ChristopherBriddock.Service.Common.Constants.CorsConstants.html#ChristopherBriddock_Service_Common_Constants_CorsConstants_PolicyName
  commentId: F:ChristopherBriddock.Service.Common.Constants.CorsConstants.PolicyName
  fullName: ChristopherBriddock.Service.Common.Constants.CorsConstants.PolicyName
  nameWithType: CorsConstants.PolicyName
- uid: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants
  name: EmailPublisherConstants
  href: api/ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.html
  commentId: T:ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants
  fullName: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants
  nameWithType: EmailPublisherConstants
- uid: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.ForgotPassword
  name: ForgotPassword
  href: api/ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.html#ChristopherBriddock_Service_Common_Constants_EmailPublisherConstants_ForgotPassword
  commentId: F:ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.ForgotPassword
  fullName: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.ForgotPassword
  nameWithType: EmailPublisherConstants.ForgotPassword
- uid: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.Register
  name: Register
  href: api/ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.html#ChristopherBriddock_Service_Common_Constants_EmailPublisherConstants_Register
  commentId: F:ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.Register
  fullName: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.Register
  nameWithType: EmailPublisherConstants.Register
- uid: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.TwoFactorToken
  name: TwoFactorToken
  href: api/ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.html#ChristopherBriddock_Service_Common_Constants_EmailPublisherConstants_TwoFactorToken
  commentId: F:ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.TwoFactorToken
  fullName: ChristopherBriddock.Service.Common.Constants.EmailPublisherConstants.TwoFactorToken
  nameWithType: EmailPublisherConstants.TwoFactorToken
- uid: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants
  name: FeatureFlagConstants
  href: api/ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.html
  commentId: T:ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants
  fullName: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants
  nameWithType: FeatureFlagConstants
- uid: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.AzApplicationInsights
  name: AzApplicationInsights
  href: api/ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.html#ChristopherBriddock_Service_Common_Constants_FeatureFlagConstants_AzApplicationInsights
  commentId: F:ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.AzApplicationInsights
  fullName: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.AzApplicationInsights
  nameWithType: FeatureFlagConstants.AzApplicationInsights
- uid: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.AzServiceBus
  name: AzServiceBus
  href: api/ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.html#ChristopherBriddock_Service_Common_Constants_FeatureFlagConstants_AzServiceBus
  commentId: F:ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.AzServiceBus
  fullName: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.AzServiceBus
  nameWithType: FeatureFlagConstants.AzServiceBus
- uid: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.RabbitMq
  name: RabbitMq
  href: api/ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.html#ChristopherBriddock_Service_Common_Constants_FeatureFlagConstants_RabbitMq
  commentId: F:ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.RabbitMq
  fullName: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.RabbitMq
  nameWithType: FeatureFlagConstants.RabbitMq
- uid: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.Redis
  name: Redis
  href: api/ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.html#ChristopherBriddock_Service_Common_Constants_FeatureFlagConstants_Redis
  commentId: F:ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.Redis
  fullName: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.Redis
  nameWithType: FeatureFlagConstants.Redis
- uid: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.Seq
  name: Seq
  href: api/ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.html#ChristopherBriddock_Service_Common_Constants_FeatureFlagConstants_Seq
  commentId: F:ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.Seq
  fullName: ChristopherBriddock.Service.Common.Constants.FeatureFlagConstants.Seq
  nameWithType: FeatureFlagConstants.Seq
- uid: ChristopherBriddock.Service.Common.Extensions
  name: ChristopherBriddock.Service.Common.Extensions
  href: api/ChristopherBriddock.Service.Common.Extensions.html
  commentId: N:ChristopherBriddock.Service.Common.Extensions
  fullName: ChristopherBriddock.Service.Common.Extensions
  nameWithType: ChristopherBriddock.Service.Common.Extensions
- uid: ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.html
  commentId: T:ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions
  fullName: ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.AddSerilogWithConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddSerilogWithConfiguration(IServiceCollection)
  href: api/ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Common_Extensions_ServiceCollectionExtensions_AddSerilogWithConfiguration_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.AddSerilogWithConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.AddSerilogWithConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddSerilogWithConfiguration(IServiceCollection)
- uid: ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.AddSerilogWithConfiguration*
  name: AddSerilogWithConfiguration
  href: api/ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Common_Extensions_ServiceCollectionExtensions_AddSerilogWithConfiguration_
  commentId: Overload:ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.AddSerilogWithConfiguration
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Common.Extensions.ServiceCollectionExtensions.AddSerilogWithConfiguration
  nameWithType: ServiceCollectionExtensions.AddSerilogWithConfiguration
- uid: ChristopherBriddock.Service.Common.Messaging
  name: ChristopherBriddock.Service.Common.Messaging
  href: api/ChristopherBriddock.Service.Common.Messaging.html
  commentId: N:ChristopherBriddock.Service.Common.Messaging
  fullName: ChristopherBriddock.Service.Common.Messaging
  nameWithType: ChristopherBriddock.Service.Common.Messaging
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage
  name: EmailMessage
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html
  commentId: T:ChristopherBriddock.Service.Common.Messaging.EmailMessage
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage
  nameWithType: EmailMessage
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Code
  name: Code
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html#ChristopherBriddock_Service_Common_Messaging_EmailMessage_Code
  commentId: P:ChristopherBriddock.Service.Common.Messaging.EmailMessage.Code
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Code
  nameWithType: EmailMessage.Code
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Code*
  name: Code
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html#ChristopherBriddock_Service_Common_Messaging_EmailMessage_Code_
  commentId: Overload:ChristopherBriddock.Service.Common.Messaging.EmailMessage.Code
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Code
  nameWithType: EmailMessage.Code
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage.EmailAddress
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html#ChristopherBriddock_Service_Common_Messaging_EmailMessage_EmailAddress
  commentId: P:ChristopherBriddock.Service.Common.Messaging.EmailMessage.EmailAddress
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage.EmailAddress
  nameWithType: EmailMessage.EmailAddress
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage.EmailAddress*
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html#ChristopherBriddock_Service_Common_Messaging_EmailMessage_EmailAddress_
  commentId: Overload:ChristopherBriddock.Service.Common.Messaging.EmailMessage.EmailAddress
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage.EmailAddress
  nameWithType: EmailMessage.EmailAddress
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Type
  name: Type
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html#ChristopherBriddock_Service_Common_Messaging_EmailMessage_Type
  commentId: P:ChristopherBriddock.Service.Common.Messaging.EmailMessage.Type
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Type
  nameWithType: EmailMessage.Type
- uid: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Type*
  name: Type
  href: api/ChristopherBriddock.Service.Common.Messaging.EmailMessage.html#ChristopherBriddock_Service_Common_Messaging_EmailMessage_Type_
  commentId: Overload:ChristopherBriddock.Service.Common.Messaging.EmailMessage.Type
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Common.Messaging.EmailMessage.Type
  nameWithType: EmailMessage.Type
- uid: ChristopherBriddock.Service.Email
  name: ChristopherBriddock.Service.Email
  href: api/ChristopherBriddock.Service.Email.html
  commentId: N:ChristopherBriddock.Service.Email
  fullName: ChristopherBriddock.Service.Email
  nameWithType: ChristopherBriddock.Service.Email
- uid: ChristopherBriddock.Service.Email.EmailConsumer
  name: EmailConsumer
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html
  commentId: T:ChristopherBriddock.Service.Email.EmailConsumer
  fullName: ChristopherBriddock.Service.Email.EmailConsumer
  nameWithType: EmailConsumer
- uid: ChristopherBriddock.Service.Email.EmailConsumer.#ctor(Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Email.EmailConsumer},Microsoft.Extensions.Configuration.IConfiguration)
  name: EmailConsumer(ILogger<EmailConsumer>, IConfiguration)
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer__ctor_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Email_EmailConsumer__Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:ChristopherBriddock.Service.Email.EmailConsumer.#ctor(Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Email.EmailConsumer},Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(ILogger(Of EmailConsumer), IConfiguration)
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.EmailConsumer(Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Email.EmailConsumer>, Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: ChristopherBriddock.Service.Email.EmailConsumer.New(Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Email.EmailConsumer), Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: EmailConsumer.EmailConsumer(ILogger<EmailConsumer>, IConfiguration)
  nameWithType.vb: EmailConsumer.New(ILogger(Of EmailConsumer), IConfiguration)
- uid: ChristopherBriddock.Service.Email.EmailConsumer.#ctor*
  name: EmailConsumer
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer__ctor_
  commentId: Overload:ChristopherBriddock.Service.Email.EmailConsumer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.EmailConsumer
  fullName.vb: ChristopherBriddock.Service.Email.EmailConsumer.New
  nameWithType: EmailConsumer.EmailConsumer
  nameWithType.vb: EmailConsumer.New
- uid: ChristopherBriddock.Service.Email.EmailConsumer.Configuration
  name: Configuration
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer_Configuration
  commentId: P:ChristopherBriddock.Service.Email.EmailConsumer.Configuration
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.Configuration
  nameWithType: EmailConsumer.Configuration
- uid: ChristopherBriddock.Service.Email.EmailConsumer.Configuration*
  name: Configuration
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer_Configuration_
  commentId: Overload:ChristopherBriddock.Service.Email.EmailConsumer.Configuration
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.Configuration
  nameWithType: EmailConsumer.Configuration
- uid: ChristopherBriddock.Service.Email.EmailConsumer.Consume(MassTransit.ConsumeContext{ChristopherBriddock.Service.Common.Messaging.EmailMessage})
  name: Consume(ConsumeContext<EmailMessage>)
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer_Consume_MassTransit_ConsumeContext_ChristopherBriddock_Service_Common_Messaging_EmailMessage__
  commentId: M:ChristopherBriddock.Service.Email.EmailConsumer.Consume(MassTransit.ConsumeContext{ChristopherBriddock.Service.Common.Messaging.EmailMessage})
  name.vb: Consume(ConsumeContext(Of EmailMessage))
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.Consume(MassTransit.ConsumeContext<ChristopherBriddock.Service.Common.Messaging.EmailMessage>)
  fullName.vb: ChristopherBriddock.Service.Email.EmailConsumer.Consume(MassTransit.ConsumeContext(Of ChristopherBriddock.Service.Common.Messaging.EmailMessage))
  nameWithType: EmailConsumer.Consume(ConsumeContext<EmailMessage>)
  nameWithType.vb: EmailConsumer.Consume(ConsumeContext(Of EmailMessage))
- uid: ChristopherBriddock.Service.Email.EmailConsumer.Consume*
  name: Consume
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer_Consume_
  commentId: Overload:ChristopherBriddock.Service.Email.EmailConsumer.Consume
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.Consume
  nameWithType: EmailConsumer.Consume
- uid: ChristopherBriddock.Service.Email.EmailConsumer.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer_Logger
  commentId: P:ChristopherBriddock.Service.Email.EmailConsumer.Logger
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.Logger
  nameWithType: EmailConsumer.Logger
- uid: ChristopherBriddock.Service.Email.EmailConsumer.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Email.EmailConsumer.html#ChristopherBriddock_Service_Email_EmailConsumer_Logger_
  commentId: Overload:ChristopherBriddock.Service.Email.EmailConsumer.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Email.EmailConsumer.Logger
  nameWithType: EmailConsumer.Logger
- uid: ChristopherBriddock.Service.Email.Extensions
  name: ChristopherBriddock.Service.Email.Extensions
  href: api/ChristopherBriddock.Service.Email.Extensions.html
  commentId: N:ChristopherBriddock.Service.Email.Extensions
  fullName: ChristopherBriddock.Service.Email.Extensions
  nameWithType: ChristopherBriddock.Service.Email.Extensions
- uid: ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.html
  commentId: T:ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions
  fullName: ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.AddConsumerMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddConsumerMessaging(IServiceCollection)
  href: api/ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Email_Extensions_ServiceCollectionExtensions_AddConsumerMessaging_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.AddConsumerMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.AddConsumerMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddConsumerMessaging(IServiceCollection)
- uid: ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.AddConsumerMessaging*
  name: AddConsumerMessaging
  href: api/ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Email_Extensions_ServiceCollectionExtensions_AddConsumerMessaging_
  commentId: Overload:ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.AddConsumerMessaging
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Email.Extensions.ServiceCollectionExtensions.AddConsumerMessaging
  nameWithType: ServiceCollectionExtensions.AddConsumerMessaging
- uid: ChristopherBriddock.Service.Email.Tests
  name: ChristopherBriddock.Service.Email.Tests
  href: api/ChristopherBriddock.Service.Email.Tests.html
  commentId: N:ChristopherBriddock.Service.Email.Tests
  fullName: ChristopherBriddock.Service.Email.Tests
  nameWithType: ChristopherBriddock.Service.Email.Tests
- uid: ChristopherBriddock.Service.Email.Tests.UnitTest1
  name: UnitTest1
  href: api/ChristopherBriddock.Service.Email.Tests.UnitTest1.html
  commentId: T:ChristopherBriddock.Service.Email.Tests.UnitTest1
  fullName: ChristopherBriddock.Service.Email.Tests.UnitTest1
  nameWithType: UnitTest1
- uid: ChristopherBriddock.Service.Email.Tests.UnitTest1.Test1
  name: Test1()
  href: api/ChristopherBriddock.Service.Email.Tests.UnitTest1.html#ChristopherBriddock_Service_Email_Tests_UnitTest1_Test1
  commentId: M:ChristopherBriddock.Service.Email.Tests.UnitTest1.Test1
  fullName: ChristopherBriddock.Service.Email.Tests.UnitTest1.Test1()
  nameWithType: UnitTest1.Test1()
- uid: ChristopherBriddock.Service.Email.Tests.UnitTest1.Test1*
  name: Test1
  href: api/ChristopherBriddock.Service.Email.Tests.UnitTest1.html#ChristopherBriddock_Service_Email_Tests_UnitTest1_Test1_
  commentId: Overload:ChristopherBriddock.Service.Email.Tests.UnitTest1.Test1
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Email.Tests.UnitTest1.Test1
  nameWithType: UnitTest1.Test1
- uid: ChristopherBriddock.Service.Identity
  name: ChristopherBriddock.Service.Identity
  href: api/ChristopherBriddock.Service.Identity.html
  commentId: N:ChristopherBriddock.Service.Identity
  fullName: ChristopherBriddock.Service.Identity
  nameWithType: ChristopherBriddock.Service.Identity
- uid: ChristopherBriddock.Service.Identity.Constants
  name: ChristopherBriddock.Service.Identity.Constants
  href: api/ChristopherBriddock.Service.Identity.Constants.html
  commentId: N:ChristopherBriddock.Service.Identity.Constants
  fullName: ChristopherBriddock.Service.Identity.Constants
  nameWithType: ChristopherBriddock.Service.Identity.Constants
- uid: ChristopherBriddock.Service.Identity.Constants.RoleConstants
  name: RoleConstants
  href: api/ChristopherBriddock.Service.Identity.Constants.RoleConstants.html
  commentId: T:ChristopherBriddock.Service.Identity.Constants.RoleConstants
  fullName: ChristopherBriddock.Service.Identity.Constants.RoleConstants
  nameWithType: RoleConstants
- uid: ChristopherBriddock.Service.Identity.Constants.RoleConstants.AdminRole
  name: AdminRole
  href: api/ChristopherBriddock.Service.Identity.Constants.RoleConstants.html#ChristopherBriddock_Service_Identity_Constants_RoleConstants_AdminRole
  commentId: F:ChristopherBriddock.Service.Identity.Constants.RoleConstants.AdminRole
  fullName: ChristopherBriddock.Service.Identity.Constants.RoleConstants.AdminRole
  nameWithType: RoleConstants.AdminRole
- uid: ChristopherBriddock.Service.Identity.Constants.RoleConstants.UserRole
  name: UserRole
  href: api/ChristopherBriddock.Service.Identity.Constants.RoleConstants.html#ChristopherBriddock_Service_Identity_Constants_RoleConstants_UserRole
  commentId: F:ChristopherBriddock.Service.Identity.Constants.RoleConstants.UserRole
  fullName: ChristopherBriddock.Service.Identity.Constants.RoleConstants.UserRole
  nameWithType: RoleConstants.UserRole
- uid: ChristopherBriddock.Service.Identity.Data
  name: ChristopherBriddock.Service.Identity.Data
  href: api/ChristopherBriddock.Service.Identity.Data.html
  commentId: N:ChristopherBriddock.Service.Identity.Data
  fullName: ChristopherBriddock.Service.Identity.Data
  nameWithType: ChristopherBriddock.Service.Identity.Data
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext
  name: AppDbContext
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html
  commentId: T:ChristopherBriddock.Service.Identity.Data.AppDbContext
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext
  nameWithType: AppDbContext
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: AppDbContext(IConfiguration, IWebHostEnvironment)
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html#ChristopherBriddock_Service_Identity_Data_AppDbContext__ctor_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:ChristopherBriddock.Service.Identity.Data.AppDbContext.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name.vb: New(IConfiguration, IWebHostEnvironment)
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext.AppDbContext(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName.vb: ChristopherBriddock.Service.Identity.Data.AppDbContext.New(Microsoft.Extensions.Configuration.IConfiguration, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: AppDbContext.AppDbContext(IConfiguration, IWebHostEnvironment)
  nameWithType.vb: AppDbContext.New(IConfiguration, IWebHostEnvironment)
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext.#ctor*
  name: AppDbContext
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html#ChristopherBriddock_Service_Identity_Data_AppDbContext__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Data.AppDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext.AppDbContext
  fullName.vb: ChristopherBriddock.Service.Identity.Data.AppDbContext.New
  nameWithType: AppDbContext.AppDbContext
  nameWithType.vb: AppDbContext.New
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  name: OnConfiguring(DbContextOptionsBuilder)
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html#ChristopherBriddock_Service_Identity_Data_AppDbContext_OnConfiguring_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder_
  commentId: M:ChristopherBriddock.Service.Identity.Data.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  nameWithType: AppDbContext.OnConfiguring(DbContextOptionsBuilder)
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext.OnConfiguring*
  name: OnConfiguring
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html#ChristopherBriddock_Service_Identity_Data_AppDbContext_OnConfiguring_
  commentId: Overload:ChristopherBriddock.Service.Identity.Data.AppDbContext.OnConfiguring
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext.OnConfiguring
  nameWithType: AppDbContext.OnConfiguring
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext.WebHostEnvironment
  name: WebHostEnvironment
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html#ChristopherBriddock_Service_Identity_Data_AppDbContext_WebHostEnvironment
  commentId: P:ChristopherBriddock.Service.Identity.Data.AppDbContext.WebHostEnvironment
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext.WebHostEnvironment
  nameWithType: AppDbContext.WebHostEnvironment
- uid: ChristopherBriddock.Service.Identity.Data.AppDbContext.WebHostEnvironment*
  name: WebHostEnvironment
  href: api/ChristopherBriddock.Service.Identity.Data.AppDbContext.html#ChristopherBriddock_Service_Identity_Data_AppDbContext_WebHostEnvironment_
  commentId: Overload:ChristopherBriddock.Service.Identity.Data.AppDbContext.WebHostEnvironment
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Data.AppDbContext.WebHostEnvironment
  nameWithType: AppDbContext.WebHostEnvironment
- uid: ChristopherBriddock.Service.Identity.Endpoints
  name: ChristopherBriddock.Service.Identity.Endpoints
  href: api/ChristopherBriddock.Service.Identity.Endpoints.html
  commentId: N:ChristopherBriddock.Service.Identity.Endpoints
  fullName: ChristopherBriddock.Service.Identity.Endpoints
  nameWithType: ChristopherBriddock.Service.Identity.Endpoints
- uid: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint
  name: AuthoriseEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint
  nameWithType: AuthoriseEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint})
  name: AuthoriseEndpoint(IServiceProvider, ILogger<AuthoriseEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_AuthoriseEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_AuthoriseEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of AuthoriseEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.AuthoriseEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint))
  nameWithType: AuthoriseEndpoint.AuthoriseEndpoint(IServiceProvider, ILogger<AuthoriseEndpoint>)
  nameWithType.vb: AuthoriseEndpoint.New(IServiceProvider, ILogger(Of AuthoriseEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.#ctor*
  name: AuthoriseEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_AuthoriseEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.AuthoriseEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.New
  nameWithType: AuthoriseEndpoint.AuthoriseEndpoint
  nameWithType.vb: AuthoriseEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest,System.Threading.CancellationToken)
  name: HandleAsync(AuthorizeRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_AuthoriseEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest, System.Threading.CancellationToken)
  nameWithType: AuthoriseEndpoint.HandleAsync(AuthorizeRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_AuthoriseEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.AuthoriseEndpoint.HandleAsync
  nameWithType: AuthoriseEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint
  name: ConfirmEmailEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint
  nameWithType: ConfirmEmailEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint})
  name: ConfirmEmailEndpoint(IServiceProvider, ILogger<ConfirmEmailEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ConfirmEmailEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_ConfirmEmailEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of ConfirmEmailEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.ConfirmEmailEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint))
  nameWithType: ConfirmEmailEndpoint.ConfirmEmailEndpoint(IServiceProvider, ILogger<ConfirmEmailEndpoint>)
  nameWithType.vb: ConfirmEmailEndpoint.New(IServiceProvider, ILogger(Of ConfirmEmailEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.#ctor*
  name: ConfirmEmailEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ConfirmEmailEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.ConfirmEmailEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.New
  nameWithType: ConfirmEmailEndpoint.ConfirmEmailEndpoint
  nameWithType.vb: ConfirmEmailEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest,System.Threading.CancellationToken)
  name: HandleAsync(ConfirmEmailRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ConfirmEmailEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_ConfirmEmailRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest, System.Threading.CancellationToken)
  nameWithType: ConfirmEmailEndpoint.HandleAsync(ConfirmEmailRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ConfirmEmailEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ConfirmEmailEndpoint.HandleAsync
  nameWithType: ConfirmEmailEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint
  name: DeleteAccountEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint
  nameWithType: DeleteAccountEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.#ctor(Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint},System.IServiceProvider)
  name: DeleteAccountEndpoint(ILogger<DeleteAccountEndpoint>, IServiceProvider)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint__ctor_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint__System_IServiceProvider_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.#ctor(Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint},System.IServiceProvider)
  name.vb: New(ILogger(Of DeleteAccountEndpoint), IServiceProvider)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.DeleteAccountEndpoint(Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint>, System.IServiceProvider)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.New(Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint), System.IServiceProvider)
  nameWithType: DeleteAccountEndpoint.DeleteAccountEndpoint(ILogger<DeleteAccountEndpoint>, IServiceProvider)
  nameWithType.vb: DeleteAccountEndpoint.New(ILogger(Of DeleteAccountEndpoint), IServiceProvider)
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.#ctor*
  name: DeleteAccountEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.DeleteAccountEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.New
  nameWithType: DeleteAccountEndpoint.DeleteAccountEndpoint
  nameWithType.vb: DeleteAccountEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: DeleteAccountEndpoint.HandleAsync(CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.HandleAsync
  nameWithType: DeleteAccountEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.Logger
  nameWithType: DeleteAccountEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.Logger
  nameWithType: DeleteAccountEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.ServiceProvider
  name: ServiceProvider
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint_ServiceProvider
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.ServiceProvider
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.ServiceProvider
  nameWithType: DeleteAccountEndpoint.ServiceProvider
- uid: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.ServiceProvider*
  name: ServiceProvider
  href: api/ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_DeleteAccountEndpoint_ServiceProvider_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.ServiceProvider
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.DeleteAccountEndpoint.ServiceProvider
  nameWithType: DeleteAccountEndpoint.ServiceProvider
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint
  name: ForgotPasswordEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint
  nameWithType: ForgotPasswordEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint})
  name: ForgotPasswordEndpoint(IServiceProvider, ILogger<ForgotPasswordEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of ForgotPasswordEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.ForgotPasswordEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint))
  nameWithType: ForgotPasswordEndpoint.ForgotPasswordEndpoint(IServiceProvider, ILogger<ForgotPasswordEndpoint>)
  nameWithType.vb: ForgotPasswordEndpoint.New(IServiceProvider, ILogger(Of ForgotPasswordEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.#ctor*
  name: ForgotPasswordEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.ForgotPasswordEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.New
  nameWithType: ForgotPasswordEndpoint.ForgotPasswordEndpoint
  nameWithType.vb: ForgotPasswordEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest,System.Threading.CancellationToken)
  name: HandleAsync(ForgotPasswordRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_ForgotPasswordRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest, System.Threading.CancellationToken)
  nameWithType: ForgotPasswordEndpoint.HandleAsync(ForgotPasswordRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.HandleAsync
  nameWithType: ForgotPasswordEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.Logger
  nameWithType: ForgotPasswordEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ForgotPasswordEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ForgotPasswordEndpoint.Logger
  nameWithType: ForgotPasswordEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint
  name: LogoutEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint
  nameWithType: LogoutEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint})
  name: LogoutEndpoint(IServiceProvider, ILogger<LogoutEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of LogoutEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.LogoutEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint))
  nameWithType: LogoutEndpoint.LogoutEndpoint(IServiceProvider, ILogger<LogoutEndpoint>)
  nameWithType.vb: LogoutEndpoint.New(IServiceProvider, ILogger(Of LogoutEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.#ctor*
  name: LogoutEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.LogoutEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.New
  nameWithType: LogoutEndpoint.LogoutEndpoint
  nameWithType.vb: LogoutEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: LogoutEndpoint.HandleAsync(CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.HandleAsync
  nameWithType: LogoutEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Logger
  nameWithType: LogoutEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Logger
  nameWithType: LogoutEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Services
  nameWithType: LogoutEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_LogoutEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.LogoutEndpoint.Services
  nameWithType: LogoutEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint
  name: RefreshEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint
  nameWithType: RefreshEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint})
  name: RefreshEndpoint(IServiceProvider, ILogger<RefreshEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RefreshEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_RefreshEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of RefreshEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.RefreshEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint))
  nameWithType: RefreshEndpoint.RefreshEndpoint(IServiceProvider, ILogger<RefreshEndpoint>)
  nameWithType.vb: RefreshEndpoint.New(IServiceProvider, ILogger(Of RefreshEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.#ctor*
  name: RefreshEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RefreshEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.RefreshEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.New
  nameWithType: RefreshEndpoint.RefreshEndpoint
  nameWithType.vb: RefreshEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest,System.Threading.CancellationToken)
  name: HandleAsync(RefreshRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RefreshEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_RefreshRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest, System.Threading.CancellationToken)
  nameWithType: RefreshEndpoint.HandleAsync(RefreshRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RefreshEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RefreshEndpoint.HandleAsync
  nameWithType: RefreshEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint
  name: RegisterEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint
  nameWithType: RegisterEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint})
  name: RegisterEndpoint(IServiceProvider, ILogger<RegisterEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of RegisterEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.RegisterEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint))
  nameWithType: RegisterEndpoint.RegisterEndpoint(IServiceProvider, ILogger<RegisterEndpoint>)
  nameWithType.vb: RegisterEndpoint.New(IServiceProvider, ILogger(Of RegisterEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.#ctor*
  name: RegisterEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.RegisterEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.New
  nameWithType: RegisterEndpoint.RegisterEndpoint
  nameWithType.vb: RegisterEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest,System.Threading.CancellationToken)
  name: HandleAsync(RegisterRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest, System.Threading.CancellationToken)
  nameWithType: RegisterEndpoint.HandleAsync(RegisterRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.HandleAsync
  nameWithType: RegisterEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Logger
  nameWithType: RegisterEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Logger
  nameWithType: RegisterEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Services
  nameWithType: RegisterEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_RegisterEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.RegisterEndpoint.Services
  nameWithType: RegisterEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint
  name: ResetPasswordEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint
  nameWithType: ResetPasswordEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint})
  name: ResetPasswordEndpoint(IServiceProvider, ILogger<ResetPasswordEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ResetPasswordEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_ResetPasswordEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of ResetPasswordEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.ResetPasswordEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint))
  nameWithType: ResetPasswordEndpoint.ResetPasswordEndpoint(IServiceProvider, ILogger<ResetPasswordEndpoint>)
  nameWithType.vb: ResetPasswordEndpoint.New(IServiceProvider, ILogger(Of ResetPasswordEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.#ctor*
  name: ResetPasswordEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ResetPasswordEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.ResetPasswordEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.New
  nameWithType: ResetPasswordEndpoint.ResetPasswordEndpoint
  nameWithType.vb: ResetPasswordEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.HandleAsync(Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest,System.Threading.CancellationToken)
  name: HandleAsync(ResetPasswordRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ResetPasswordEndpoint_HandleAsync_Microsoft_AspNetCore_Identity_Data_ResetPasswordRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.HandleAsync(Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.HandleAsync(Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest, System.Threading.CancellationToken)
  nameWithType: ResetPasswordEndpoint.HandleAsync(ResetPasswordRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_ResetPasswordEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.ResetPasswordEndpoint.HandleAsync
  nameWithType: ResetPasswordEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint
  name: TokenEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint
  nameWithType: TokenEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint})
  name: TokenEndpoint(IServiceProvider, ILogger<TokenEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of TokenEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.TokenEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint))
  nameWithType: TokenEndpoint.TokenEndpoint(IServiceProvider, ILogger<TokenEndpoint>)
  nameWithType.vb: TokenEndpoint.New(IServiceProvider, ILogger(Of TokenEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.#ctor*
  name: TokenEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.TokenEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.New
  nameWithType: TokenEndpoint.TokenEndpoint
  nameWithType.vb: TokenEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: TokenEndpoint.HandleAsync(CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.HandleAsync
  nameWithType: TokenEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Logger
  nameWithType: TokenEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Logger
  nameWithType: TokenEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Services
  nameWithType: TokenEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TokenEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TokenEndpoint.Services
  nameWithType: TokenEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint
  name: TwoFactorAuthoriseEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint
  nameWithType: TwoFactorAuthoriseEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint})
  name: TwoFactorAuthoriseEndpoint(IServiceProvider, ILogger<TwoFactorAuthoriseEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of TwoFactorAuthoriseEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.TwoFactorAuthoriseEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint))
  nameWithType: TwoFactorAuthoriseEndpoint.TwoFactorAuthoriseEndpoint(IServiceProvider, ILogger<TwoFactorAuthoriseEndpoint>)
  nameWithType.vb: TwoFactorAuthoriseEndpoint.New(IServiceProvider, ILogger(Of TwoFactorAuthoriseEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.#ctor*
  name: TwoFactorAuthoriseEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.TwoFactorAuthoriseEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.New
  nameWithType: TwoFactorAuthoriseEndpoint.TwoFactorAuthoriseEndpoint
  nameWithType.vb: TwoFactorAuthoriseEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest,System.Threading.CancellationToken)
  name: HandleAsync(TwoFactorSignInRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorSignInRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest, System.Threading.CancellationToken)
  nameWithType: TwoFactorAuthoriseEndpoint.HandleAsync(TwoFactorSignInRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.HandleAsync
  nameWithType: TwoFactorAuthoriseEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Logger
  nameWithType: TwoFactorAuthoriseEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Logger
  nameWithType: TwoFactorAuthoriseEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Services
  nameWithType: TwoFactorAuthoriseEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorAuthoriseEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorAuthoriseEndpoint.Services
  nameWithType: TwoFactorAuthoriseEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint
  name: TwoFactorManageEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint
  nameWithType: TwoFactorManageEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint})
  name: TwoFactorManageEndpoint(IServiceProvider, ILogger<TwoFactorManageEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of TwoFactorManageEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.TwoFactorManageEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint))
  nameWithType: TwoFactorManageEndpoint.TwoFactorManageEndpoint(IServiceProvider, ILogger<TwoFactorManageEndpoint>)
  nameWithType.vb: TwoFactorManageEndpoint.New(IServiceProvider, ILogger(Of TwoFactorManageEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.#ctor*
  name: TwoFactorManageEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.TwoFactorManageEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.New
  nameWithType: TwoFactorManageEndpoint.TwoFactorManageEndpoint
  nameWithType.vb: TwoFactorManageEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest,System.Threading.CancellationToken)
  name: HandleAsync(TwoFactorManageRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorManageRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest, System.Threading.CancellationToken)
  nameWithType: TwoFactorManageEndpoint.HandleAsync(TwoFactorManageRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.HandleAsync
  nameWithType: TwoFactorManageEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Logger
  nameWithType: TwoFactorManageEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Logger
  nameWithType: TwoFactorManageEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Services
  nameWithType: TwoFactorManageEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorManageEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorManageEndpoint.Services
  nameWithType: TwoFactorManageEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint
  name: TwoFactorRecoveryCodesEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint
  nameWithType: TwoFactorRecoveryCodesEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint})
  name: TwoFactorRecoveryCodesEndpoint(IServiceProvider, ILogger<TwoFactorRecoveryCodesEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of TwoFactorRecoveryCodesEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.TwoFactorRecoveryCodesEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint))
  nameWithType: TwoFactorRecoveryCodesEndpoint.TwoFactorRecoveryCodesEndpoint(IServiceProvider, ILogger<TwoFactorRecoveryCodesEndpoint>)
  nameWithType.vb: TwoFactorRecoveryCodesEndpoint.New(IServiceProvider, ILogger(Of TwoFactorRecoveryCodesEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.#ctor*
  name: TwoFactorRecoveryCodesEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.TwoFactorRecoveryCodesEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.New
  nameWithType: TwoFactorRecoveryCodesEndpoint.TwoFactorRecoveryCodesEndpoint
  nameWithType.vb: TwoFactorRecoveryCodesEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.HandleAsync(System.Threading.CancellationToken)
  name: HandleAsync(CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint_HandleAsync_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.HandleAsync(System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.HandleAsync(System.Threading.CancellationToken)
  nameWithType: TwoFactorRecoveryCodesEndpoint.HandleAsync(CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.HandleAsync
  nameWithType: TwoFactorRecoveryCodesEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Logger
  nameWithType: TwoFactorRecoveryCodesEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Logger
  nameWithType: TwoFactorRecoveryCodesEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Services
  nameWithType: TwoFactorRecoveryCodesEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint.Services
  nameWithType: TwoFactorRecoveryCodesEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint
  name: TwoFactorRecoveryCodesRedeemEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint})
  name: TwoFactorRecoveryCodesRedeemEndpoint(IServiceProvider, ILogger<TwoFactorRecoveryCodesEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of TwoFactorRecoveryCodesEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.TwoFactorRecoveryCodesRedeemEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesEndpoint))
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.TwoFactorRecoveryCodesRedeemEndpoint(IServiceProvider, ILogger<TwoFactorRecoveryCodesEndpoint>)
  nameWithType.vb: TwoFactorRecoveryCodesRedeemEndpoint.New(IServiceProvider, ILogger(Of TwoFactorRecoveryCodesEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.#ctor*
  name: TwoFactorRecoveryCodesRedeemEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.TwoFactorRecoveryCodesRedeemEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.New
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.TwoFactorRecoveryCodesRedeemEndpoint
  nameWithType.vb: TwoFactorRecoveryCodesRedeemEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest,System.Threading.CancellationToken)
  name: HandleAsync(TwoFactorRecoveryCodesRedeemRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorRecoveryCodesRedeemRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest, System.Threading.CancellationToken)
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync(TwoFactorRecoveryCodesRedeemRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Logger
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Logger
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Services
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorRecoveryCodesRedeemEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorRecoveryCodesRedeemEndpoint.Services
  nameWithType: TwoFactorRecoveryCodesRedeemEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint
  name: TwoFactorTokenEmailEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint
  nameWithType: TwoFactorTokenEmailEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint})
  name: TwoFactorTokenEmailEndpoint(IServiceProvider, ILogger<TwoFactorTokenEmailEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of TwoFactorTokenEmailEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.TwoFactorTokenEmailEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint))
  nameWithType: TwoFactorTokenEmailEndpoint.TwoFactorTokenEmailEndpoint(IServiceProvider, ILogger<TwoFactorTokenEmailEndpoint>)
  nameWithType.vb: TwoFactorTokenEmailEndpoint.New(IServiceProvider, ILogger(Of TwoFactorTokenEmailEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.#ctor*
  name: TwoFactorTokenEmailEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.TwoFactorTokenEmailEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.New
  nameWithType: TwoFactorTokenEmailEndpoint.TwoFactorTokenEmailEndpoint
  nameWithType.vb: TwoFactorTokenEmailEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest,System.Threading.CancellationToken)
  name: HandleAsync(TwoFactorTokenEmailRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorTokenEmailRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest, System.Threading.CancellationToken)
  nameWithType: TwoFactorTokenEmailEndpoint.HandleAsync(TwoFactorTokenEmailRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.HandleAsync
  nameWithType: TwoFactorTokenEmailEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Logger
  nameWithType: TwoFactorTokenEmailEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Logger
  nameWithType: TwoFactorTokenEmailEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Services
  nameWithType: TwoFactorTokenEmailEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_TwoFactorTokenEmailEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.TwoFactorTokenEmailEndpoint.Services
  nameWithType: TwoFactorTokenEmailEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint
  name: UpdateEmailEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint
  nameWithType: UpdateEmailEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint})
  name: UpdateEmailEndpoint(IServiceProvider, ILogger<UpdateEmailEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of UpdateEmailEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.UpdateEmailEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint))
  nameWithType: UpdateEmailEndpoint.UpdateEmailEndpoint(IServiceProvider, ILogger<UpdateEmailEndpoint>)
  nameWithType.vb: UpdateEmailEndpoint.New(IServiceProvider, ILogger(Of UpdateEmailEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.#ctor*
  name: UpdateEmailEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.UpdateEmailEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.New
  nameWithType: UpdateEmailEndpoint.UpdateEmailEndpoint
  nameWithType.vb: UpdateEmailEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdateEmailRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_UpdateEmailRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest, System.Threading.CancellationToken)
  nameWithType: UpdateEmailEndpoint.HandleAsync(UpdateEmailRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.HandleAsync
  nameWithType: UpdateEmailEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Logger
  nameWithType: UpdateEmailEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Logger
  nameWithType: UpdateEmailEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Services
  nameWithType: UpdateEmailEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdateEmailEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdateEmailEndpoint.Services
  nameWithType: UpdateEmailEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint
  name: UpdatePasswordEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint
  nameWithType: UpdatePasswordEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint})
  name: UpdatePasswordEndpoint(IServiceProvider, ILogger<UpdatePasswordEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of UpdatePasswordEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.UpdatePasswordEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint))
  nameWithType: UpdatePasswordEndpoint.UpdatePasswordEndpoint(IServiceProvider, ILogger<UpdatePasswordEndpoint>)
  nameWithType.vb: UpdatePasswordEndpoint.New(IServiceProvider, ILogger(Of UpdatePasswordEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.#ctor*
  name: UpdatePasswordEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.UpdatePasswordEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.New
  nameWithType: UpdatePasswordEndpoint.UpdatePasswordEndpoint
  nameWithType.vb: UpdatePasswordEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdatePasswordRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_UpdatePasswordRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest, System.Threading.CancellationToken)
  nameWithType: UpdatePasswordEndpoint.HandleAsync(UpdatePasswordRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.HandleAsync
  nameWithType: UpdatePasswordEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Logger
  nameWithType: UpdatePasswordEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Logger
  nameWithType: UpdatePasswordEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Services
  nameWithType: UpdatePasswordEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePasswordEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePasswordEndpoint.Services
  nameWithType: UpdatePasswordEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint
  name: UpdatePhoneNumberEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html
  commentId: T:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint
  nameWithType: UpdatePhoneNumberEndpoint
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint})
  name: UpdatePhoneNumberEndpoint(IServiceProvider, ILogger<UpdatePhoneNumberEndpoint>)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint__
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint})
  name.vb: New(IServiceProvider, ILogger(Of UpdatePhoneNumberEndpoint))
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint>)
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint))
  nameWithType: UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint(IServiceProvider, ILogger<UpdatePhoneNumberEndpoint>)
  nameWithType.vb: UpdatePhoneNumberEndpoint.New(IServiceProvider, ILogger(Of UpdatePhoneNumberEndpoint))
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.#ctor*
  name: UpdatePhoneNumberEndpoint
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint
  fullName.vb: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.New
  nameWithType: UpdatePhoneNumberEndpoint.UpdatePhoneNumberEndpoint
  nameWithType.vb: UpdatePhoneNumberEndpoint.New
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest,System.Threading.CancellationToken)
  name: HandleAsync(UpdatePhoneNumberRequest, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint_HandleAsync_ChristopherBriddock_Service_Identity_Models_Requests_UpdatePhoneNumberRequest_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.HandleAsync(ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest, System.Threading.CancellationToken)
  nameWithType: UpdatePhoneNumberEndpoint.HandleAsync(UpdatePhoneNumberRequest, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.HandleAsync*
  name: HandleAsync
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint_HandleAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.HandleAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.HandleAsync
  nameWithType: UpdatePhoneNumberEndpoint.HandleAsync
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Logger
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint_Logger
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Logger
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Logger
  nameWithType: UpdatePhoneNumberEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Logger*
  name: Logger
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint_Logger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Logger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Logger
  nameWithType: UpdatePhoneNumberEndpoint.Logger
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Services
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint_Services
  commentId: P:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Services
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Services
  nameWithType: UpdatePhoneNumberEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Services*
  name: Services
  href: api/ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.html#ChristopherBriddock_Service_Identity_Endpoints_UpdatePhoneNumberEndpoint_Services_
  commentId: Overload:ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Services
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Endpoints.UpdatePhoneNumberEndpoint.Services
  nameWithType: UpdatePhoneNumberEndpoint.Services
- uid: ChristopherBriddock.Service.Identity.Exceptions
  name: ChristopherBriddock.Service.Identity.Exceptions
  href: api/ChristopherBriddock.Service.Identity.Exceptions.html
  commentId: N:ChristopherBriddock.Service.Identity.Exceptions
  fullName: ChristopherBriddock.Service.Identity.Exceptions
  nameWithType: ChristopherBriddock.Service.Identity.Exceptions
- uid: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException
  name: CreateJwtException
  href: api/ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.html
  commentId: T:ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException
  fullName: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException
  nameWithType: CreateJwtException
- uid: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor
  name: CreateJwtException()
  href: api/ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_CreateJwtException__ctor
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor
  name.vb: New()
  fullName: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.CreateJwtException()
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.New()
  nameWithType: CreateJwtException.CreateJwtException()
  nameWithType.vb: CreateJwtException.New()
- uid: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor(System.String)
  name: CreateJwtException(string)
  href: api/ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_CreateJwtException__ctor_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor(System.String)
  name.vb: New(String)
  fullName: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.CreateJwtException(string)
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.New(String)
  nameWithType: CreateJwtException.CreateJwtException(string)
  nameWithType.vb: CreateJwtException.New(String)
- uid: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor(System.String,System.Exception)
  name: CreateJwtException(string, Exception)
  href: api/ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_CreateJwtException__ctor_System_String_System_Exception_
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.CreateJwtException(string, System.Exception)
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.New(String, System.Exception)
  nameWithType: CreateJwtException.CreateJwtException(string, Exception)
  nameWithType.vb: CreateJwtException.New(String, Exception)
- uid: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor*
  name: CreateJwtException
  href: api/ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_CreateJwtException__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.CreateJwtException
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.CreateJwtException.New
  nameWithType: CreateJwtException.CreateJwtException
  nameWithType.vb: CreateJwtException.New
- uid: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException
  name: JwtSecretNullOrEmptyException
  href: api/ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.html
  commentId: T:ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException
  fullName: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException
  nameWithType: JwtSecretNullOrEmptyException
- uid: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor
  name: JwtSecretNullOrEmptyException()
  href: api/ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.html#ChristopherBriddock_Service_Identity_Exceptions_JwtSecretNullOrEmptyException__ctor
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor
  name.vb: New()
  fullName: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException()
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.New()
  nameWithType: JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException()
  nameWithType.vb: JwtSecretNullOrEmptyException.New()
- uid: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor(System.String)
  name: JwtSecretNullOrEmptyException(string?)
  href: api/ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.html#ChristopherBriddock_Service_Identity_Exceptions_JwtSecretNullOrEmptyException__ctor_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor(System.String)
  name.vb: New(String)
  fullName: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException(string?)
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.New(String)
  nameWithType: JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException(string?)
  nameWithType.vb: JwtSecretNullOrEmptyException.New(String)
- uid: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor(System.String,System.Exception)
  name: JwtSecretNullOrEmptyException(string?, Exception?)
  href: api/ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.html#ChristopherBriddock_Service_Identity_Exceptions_JwtSecretNullOrEmptyException__ctor_System_String_System_Exception_
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException(string?, System.Exception?)
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.New(String, System.Exception)
  nameWithType: JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException(string?, Exception?)
  nameWithType.vb: JwtSecretNullOrEmptyException.New(String, Exception)
- uid: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor*
  name: JwtSecretNullOrEmptyException
  href: api/ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.html#ChristopherBriddock_Service_Identity_Exceptions_JwtSecretNullOrEmptyException__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.JwtSecretNullOrEmptyException.New
  nameWithType: JwtSecretNullOrEmptyException.JwtSecretNullOrEmptyException
  nameWithType.vb: JwtSecretNullOrEmptyException.New
- uid: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException
  name: ValidateJwtException
  href: api/ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.html
  commentId: T:ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException
  fullName: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException
  nameWithType: ValidateJwtException
- uid: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor
  name: ValidateJwtException()
  href: api/ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_ValidateJwtException__ctor
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor
  name.vb: New()
  fullName: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.ValidateJwtException()
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.New()
  nameWithType: ValidateJwtException.ValidateJwtException()
  nameWithType.vb: ValidateJwtException.New()
- uid: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor(System.String)
  name: ValidateJwtException(string)
  href: api/ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_ValidateJwtException__ctor_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor(System.String)
  name.vb: New(String)
  fullName: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.ValidateJwtException(string)
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.New(String)
  nameWithType: ValidateJwtException.ValidateJwtException(string)
  nameWithType.vb: ValidateJwtException.New(String)
- uid: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor(System.String,System.Exception)
  name: ValidateJwtException(string, Exception)
  href: api/ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_ValidateJwtException__ctor_System_String_System_Exception_
  commentId: M:ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.ValidateJwtException(string, System.Exception)
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.New(String, System.Exception)
  nameWithType: ValidateJwtException.ValidateJwtException(string, Exception)
  nameWithType.vb: ValidateJwtException.New(String, Exception)
- uid: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor*
  name: ValidateJwtException
  href: api/ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.html#ChristopherBriddock_Service_Identity_Exceptions_ValidateJwtException__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.ValidateJwtException
  fullName.vb: ChristopherBriddock.Service.Identity.Exceptions.ValidateJwtException.New
  nameWithType: ValidateJwtException.ValidateJwtException
  nameWithType.vb: ValidateJwtException.New
- uid: ChristopherBriddock.Service.Identity.Extensions
  name: ChristopherBriddock.Service.Identity.Extensions
  href: api/ChristopherBriddock.Service.Identity.Extensions.html
  commentId: N:ChristopherBriddock.Service.Identity.Extensions
  fullName: ChristopherBriddock.Service.Identity.Extensions
  nameWithType: ChristopherBriddock.Service.Identity.Extensions
- uid: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions
  name: HealthCheckExtensions
  href: api/ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.html
  commentId: T:ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions
  fullName: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions
  nameWithType: HealthCheckExtensions
- uid: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCustomHealthChecks(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.html#ChristopherBriddock_Service_Identity_Extensions_HealthCheckExtensions_AddCustomHealthChecks_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: HealthCheckExtensions.AddCustomHealthChecks(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.AddCustomHealthChecks*
  name: AddCustomHealthChecks
  href: api/ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.html#ChristopherBriddock_Service_Identity_Extensions_HealthCheckExtensions_AddCustomHealthChecks_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.AddCustomHealthChecks
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.AddCustomHealthChecks
  nameWithType: HealthCheckExtensions.AddCustomHealthChecks
- uid: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.UseCustomHealthCheckMapping(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  name: UseCustomHealthCheckMapping(IEndpointRouteBuilder)
  href: api/ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.html#ChristopherBriddock_Service_Identity_Extensions_HealthCheckExtensions_UseCustomHealthCheckMapping_Microsoft_AspNetCore_Routing_IEndpointRouteBuilder_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.UseCustomHealthCheckMapping(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  fullName: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.UseCustomHealthCheckMapping(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  nameWithType: HealthCheckExtensions.UseCustomHealthCheckMapping(IEndpointRouteBuilder)
- uid: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.UseCustomHealthCheckMapping*
  name: UseCustomHealthCheckMapping
  href: api/ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.html#ChristopherBriddock_Service_Identity_Extensions_HealthCheckExtensions_UseCustomHealthCheckMapping_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.UseCustomHealthCheckMapping
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.HealthCheckExtensions.UseCustomHealthCheckMapping
  nameWithType: HealthCheckExtensions.UseCustomHealthCheckMapping
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html
  commentId: T:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddAzureAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddAzureAppInsights(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddAzureAppInsights_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddAzureAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddAzureAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddAzureAppInsights(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddAzureAppInsights*
  name: AddAzureAppInsights
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddAzureAppInsights_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddAzureAppInsights
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddAzureAppInsights
  nameWithType: ServiceCollectionExtensions.AddAzureAppInsights
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCache(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCache_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCache(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCache*
  name: AddCache
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCache_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCache
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCache
  nameWithType: ServiceCollectionExtensions.AddCache
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCrossOriginPolicy(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCrossOriginPolicy(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCrossOriginPolicy_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCrossOriginPolicy(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCrossOriginPolicy(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCrossOriginPolicy(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCrossOriginPolicy*
  name: AddCrossOriginPolicy
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCrossOriginPolicy_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCrossOriginPolicy
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCrossOriginPolicy
  nameWithType: ServiceCollectionExtensions.AddCrossOriginPolicy
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCustomAuthentication(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCustomAuthentication_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCustomAuthentication(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthentication*
  name: AddCustomAuthentication
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCustomAuthentication_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthentication
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthentication
  nameWithType: ServiceCollectionExtensions.AddCustomAuthentication
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCustomAuthorization(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCustomAuthorization_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCustomAuthorization(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthorization*
  name: AddCustomAuthorization
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCustomAuthorization_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthorization
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomAuthorization
  nameWithType: ServiceCollectionExtensions.AddCustomAuthorization
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCustomSession(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCustomSession_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomSession(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddCustomSession(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomSession*
  name: AddCustomSession
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddCustomSession_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomSession
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddCustomSession
  nameWithType: ServiceCollectionExtensions.AddCustomSession
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddIdentity(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddIdentity_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddIdentity(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddIdentity(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddIdentity*
  name: AddIdentity
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddIdentity_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddIdentity
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddIdentity
  nameWithType: ServiceCollectionExtensions.AddIdentity
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddPublisherMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddPublisherMessaging(IServiceCollection)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddPublisherMessaging_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddPublisherMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddPublisherMessaging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServiceCollectionExtensions.AddPublisherMessaging(IServiceCollection)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddPublisherMessaging*
  name: AddPublisherMessaging
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddPublisherMessaging_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddPublisherMessaging
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddPublisherMessaging
  nameWithType: ServiceCollectionExtensions.AddPublisherMessaging
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)
  name: AddSwagger(IServiceCollection, string)
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddSwagger_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)
  name.vb: AddSwagger(IServiceCollection, String)
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection, String)
  nameWithType: ServiceCollectionExtensions.AddSwagger(IServiceCollection, string)
  nameWithType.vb: ServiceCollectionExtensions.AddSwagger(IServiceCollection, String)
- uid: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger*
  name: AddSwagger
  href: api/ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.html#ChristopherBriddock_Service_Identity_Extensions_ServiceCollectionExtensions_AddSwagger_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.ServiceCollectionExtensions.AddSwagger
  nameWithType: ServiceCollectionExtensions.AddSwagger
- uid: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions
  name: WebApplicationExtensions
  href: api/ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.html
  commentId: T:ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions
  fullName: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions
  nameWithType: WebApplicationExtensions
- uid: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync*
  name: UseDatabaseMigrationsAsync
  href: api/ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.html#ChristopherBriddock_Service_Identity_Extensions_WebApplicationExtensions_UseDatabaseMigrationsAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync
  nameWithType: WebApplicationExtensions.UseDatabaseMigrationsAsync
- uid: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync``1(Microsoft.AspNetCore.Builder.WebApplication)
  name: UseDatabaseMigrationsAsync<TDbContext>(WebApplication)
  href: api/ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.html#ChristopherBriddock_Service_Identity_Extensions_WebApplicationExtensions_UseDatabaseMigrationsAsync__1_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync``1(Microsoft.AspNetCore.Builder.WebApplication)
  name.vb: UseDatabaseMigrationsAsync(Of TDbContext)(WebApplication)
  fullName: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync<TDbContext>(Microsoft.AspNetCore.Builder.WebApplication)
  fullName.vb: ChristopherBriddock.Service.Identity.Extensions.WebApplicationExtensions.UseDatabaseMigrationsAsync(Of TDbContext)(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: WebApplicationExtensions.UseDatabaseMigrationsAsync<TDbContext>(WebApplication)
  nameWithType.vb: WebApplicationExtensions.UseDatabaseMigrationsAsync(Of TDbContext)(WebApplication)
- uid: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions
  name: WebHostBuilderExtensions
  href: api/ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.html
  commentId: T:ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions
  fullName: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions
  nameWithType: WebHostBuilderExtensions
- uid: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Int32)
  name: AddKestrelConfiguration(IWebHostBuilder, int)
  href: api/ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.html#ChristopherBriddock_Service_Identity_Extensions_WebHostBuilderExtensions_AddKestrelConfiguration_Microsoft_AspNetCore_Hosting_IWebHostBuilder_System_Int32_
  commentId: M:ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Int32)
  name.vb: AddKestrelConfiguration(IWebHostBuilder, Integer)
  fullName: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder, int)
  fullName.vb: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder, Integer)
  nameWithType: WebHostBuilderExtensions.AddKestrelConfiguration(IWebHostBuilder, int)
  nameWithType.vb: WebHostBuilderExtensions.AddKestrelConfiguration(IWebHostBuilder, Integer)
- uid: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration*
  name: AddKestrelConfiguration
  href: api/ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.html#ChristopherBriddock_Service_Identity_Extensions_WebHostBuilderExtensions_AddKestrelConfiguration_
  commentId: Overload:ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Extensions.WebHostBuilderExtensions.AddKestrelConfiguration
  nameWithType: WebHostBuilderExtensions.AddKestrelConfiguration
- uid: ChristopherBriddock.Service.Identity.Models
  name: ChristopherBriddock.Service.Identity.Models
  href: api/ChristopherBriddock.Service.Identity.Models.html
  commentId: N:ChristopherBriddock.Service.Identity.Models
  fullName: ChristopherBriddock.Service.Identity.Models
  nameWithType: ChristopherBriddock.Service.Identity.Models
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationRole
  name: ApplicationRole
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationRole.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationRole
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationRole
  nameWithType: ApplicationRole
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationRole.Id
  name: Id
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationRole.html#ChristopherBriddock_Service_Identity_Models_ApplicationRole_Id
  commentId: P:ChristopherBriddock.Service.Identity.Models.ApplicationRole.Id
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationRole.Id
  nameWithType: ApplicationRole.Id
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationRole.Id*
  name: Id
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationRole.html#ChristopherBriddock_Service_Identity_Models_ApplicationRole_Id_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.ApplicationRole.Id
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationRole.Id
  nameWithType: ApplicationRole.Id
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationRoleClaim
  name: ApplicationRoleClaim
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationRoleClaim.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationRoleClaim
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationRoleClaim
  nameWithType: ApplicationRoleClaim
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser
  name: ApplicationUser
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationUser
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser
  nameWithType: ApplicationUser
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser.DeletedDateTime
  name: DeletedDateTime
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html#ChristopherBriddock_Service_Identity_Models_ApplicationUser_DeletedDateTime
  commentId: P:ChristopherBriddock.Service.Identity.Models.ApplicationUser.DeletedDateTime
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser.DeletedDateTime
  nameWithType: ApplicationUser.DeletedDateTime
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser.DeletedDateTime*
  name: DeletedDateTime
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html#ChristopherBriddock_Service_Identity_Models_ApplicationUser_DeletedDateTime_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.ApplicationUser.DeletedDateTime
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser.DeletedDateTime
  nameWithType: ApplicationUser.DeletedDateTime
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser.Id
  name: Id
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html#ChristopherBriddock_Service_Identity_Models_ApplicationUser_Id
  commentId: P:ChristopherBriddock.Service.Identity.Models.ApplicationUser.Id
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser.Id
  nameWithType: ApplicationUser.Id
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser.Id*
  name: Id
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html#ChristopherBriddock_Service_Identity_Models_ApplicationUser_Id_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.ApplicationUser.Id
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser.Id
  nameWithType: ApplicationUser.Id
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser.IsDeleted
  name: IsDeleted
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html#ChristopherBriddock_Service_Identity_Models_ApplicationUser_IsDeleted
  commentId: P:ChristopherBriddock.Service.Identity.Models.ApplicationUser.IsDeleted
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser.IsDeleted
  nameWithType: ApplicationUser.IsDeleted
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUser.IsDeleted*
  name: IsDeleted
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUser.html#ChristopherBriddock_Service_Identity_Models_ApplicationUser_IsDeleted_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.ApplicationUser.IsDeleted
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUser.IsDeleted
  nameWithType: ApplicationUser.IsDeleted
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUserClaims
  name: ApplicationUserClaims
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUserClaims.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationUserClaims
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUserClaims
  nameWithType: ApplicationUserClaims
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUserLogin
  name: ApplicationUserLogin
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUserLogin.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationUserLogin
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUserLogin
  nameWithType: ApplicationUserLogin
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUserRole
  name: ApplicationUserRole
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUserRole.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationUserRole
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUserRole
  nameWithType: ApplicationUserRole
- uid: ChristopherBriddock.Service.Identity.Models.ApplicationUserToken
  name: ApplicationUserToken
  href: api/ChristopherBriddock.Service.Identity.Models.ApplicationUserToken.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.ApplicationUserToken
  fullName: ChristopherBriddock.Service.Identity.Models.ApplicationUserToken
  nameWithType: ApplicationUserToken
- uid: ChristopherBriddock.Service.Identity.Models.Requests
  name: ChristopherBriddock.Service.Identity.Models.Requests
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.html
  commentId: N:ChristopherBriddock.Service.Identity.Models.Requests
  fullName: ChristopherBriddock.Service.Identity.Models.Requests
  nameWithType: ChristopherBriddock.Service.Identity.Models.Requests
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest
  name: AuthorizeRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest
  nameWithType: AuthorizeRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.EmailAddress
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_EmailAddress
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.EmailAddress
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.EmailAddress
  nameWithType: AuthorizeRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.EmailAddress*
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_EmailAddress_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.EmailAddress
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.EmailAddress
  nameWithType: AuthorizeRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.Password
  name: Password
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_Password
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.Password
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.Password
  nameWithType: AuthorizeRequest.Password
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.Password*
  name: Password
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_Password_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.Password
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.Password
  nameWithType: AuthorizeRequest.Password
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.RememberMe
  name: RememberMe
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_RememberMe
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.RememberMe
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.RememberMe
  nameWithType: AuthorizeRequest.RememberMe
- uid: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.RememberMe*
  name: RememberMe
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_AuthorizeRequest_RememberMe_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.RememberMe
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.AuthorizeRequest.RememberMe
  nameWithType: AuthorizeRequest.RememberMe
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest
  name: ConfirmEmailRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest
  nameWithType: ConfirmEmailRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.Code
  name: Code
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_ConfirmEmailRequest_Code
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.Code
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.Code
  nameWithType: ConfirmEmailRequest.Code
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.Code*
  name: Code
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_ConfirmEmailRequest_Code_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.Code
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.Code
  nameWithType: ConfirmEmailRequest.Code
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.EmailAddress
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_ConfirmEmailRequest_EmailAddress
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.EmailAddress
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.EmailAddress
  nameWithType: ConfirmEmailRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.EmailAddress*
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_ConfirmEmailRequest_EmailAddress_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.EmailAddress
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ConfirmEmailRequest.EmailAddress
  nameWithType: ConfirmEmailRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest
  name: ForgotPasswordRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest
  nameWithType: ForgotPasswordRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.EmailAddress
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_ForgotPasswordRequest_EmailAddress
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.EmailAddress
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.EmailAddress
  nameWithType: ForgotPasswordRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.EmailAddress*
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_ForgotPasswordRequest_EmailAddress_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.EmailAddress
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.ForgotPasswordRequest.EmailAddress
  nameWithType: ForgotPasswordRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest
  name: RefreshRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest
  nameWithType: RefreshRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.RefreshToken
  name: RefreshToken
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RefreshRequest_RefreshToken
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.RefreshToken
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.RefreshToken
  nameWithType: RefreshRequest.RefreshToken
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.RefreshToken*
  name: RefreshToken
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RefreshRequest_RefreshToken_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.RefreshToken
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RefreshRequest.RefreshToken
  nameWithType: RefreshRequest.RefreshToken
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest
  name: RegisterRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest
  nameWithType: RegisterRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.EmailAddress
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_EmailAddress
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.EmailAddress
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.EmailAddress
  nameWithType: RegisterRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.EmailAddress*
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_EmailAddress_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.EmailAddress
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.EmailAddress
  nameWithType: RegisterRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.Password
  name: Password
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_Password
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.Password
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.Password
  nameWithType: RegisterRequest.Password
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.Password*
  name: Password
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_Password_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.Password
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.Password
  nameWithType: RegisterRequest.Password
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.PhoneNumber
  name: PhoneNumber
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_PhoneNumber
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.PhoneNumber
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.PhoneNumber
  nameWithType: RegisterRequest.PhoneNumber
- uid: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.PhoneNumber*
  name: PhoneNumber
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_RegisterRequest_PhoneNumber_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.PhoneNumber
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.RegisterRequest.PhoneNumber
  nameWithType: RegisterRequest.PhoneNumber
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest
  name: TwoFactorManageRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest
  nameWithType: TwoFactorManageRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.IsEnabled
  name: IsEnabled
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorManageRequest_IsEnabled
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.IsEnabled
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.IsEnabled
  nameWithType: TwoFactorManageRequest.IsEnabled
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.IsEnabled*
  name: IsEnabled
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorManageRequest_IsEnabled_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.IsEnabled
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorManageRequest.IsEnabled
  nameWithType: TwoFactorManageRequest.IsEnabled
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest
  name: TwoFactorRecoveryCodesRedeemRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest
  nameWithType: TwoFactorRecoveryCodesRedeemRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.Code
  name: Code
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorRecoveryCodesRedeemRequest_Code
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.Code
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.Code
  nameWithType: TwoFactorRecoveryCodesRedeemRequest.Code
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.Code*
  name: Code
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorRecoveryCodesRedeemRequest_Code_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.Code
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorRecoveryCodesRedeemRequest.Code
  nameWithType: TwoFactorRecoveryCodesRedeemRequest.Code
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest
  name: TwoFactorSignInRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest
  nameWithType: TwoFactorSignInRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.Token
  name: Token
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorSignInRequest_Token
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.Token
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.Token
  nameWithType: TwoFactorSignInRequest.Token
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.Token*
  name: Token
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorSignInRequest_Token_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.Token
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorSignInRequest.Token
  nameWithType: TwoFactorSignInRequest.Token
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest
  name: TwoFactorTokenEmailRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest
  nameWithType: TwoFactorTokenEmailRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.Email
  name: Email
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorTokenEmailRequest_Email
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.Email
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.Email
  nameWithType: TwoFactorTokenEmailRequest.Email
- uid: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.Email*
  name: Email
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_TwoFactorTokenEmailRequest_Email_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.Email
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.TwoFactorTokenEmailRequest.Email
  nameWithType: TwoFactorTokenEmailRequest.Email
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest
  name: UpdateEmailRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest
  nameWithType: UpdateEmailRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.EmailAddress
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdateEmailRequest_EmailAddress
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.EmailAddress
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.EmailAddress
  nameWithType: UpdateEmailRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.EmailAddress*
  name: EmailAddress
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdateEmailRequest_EmailAddress_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.EmailAddress
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdateEmailRequest.EmailAddress
  nameWithType: UpdateEmailRequest.EmailAddress
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest
  name: UpdatePasswordRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest
  nameWithType: UpdatePasswordRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.CurrentPassword
  name: CurrentPassword
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdatePasswordRequest_CurrentPassword
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.CurrentPassword
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.CurrentPassword
  nameWithType: UpdatePasswordRequest.CurrentPassword
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.CurrentPassword*
  name: CurrentPassword
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdatePasswordRequest_CurrentPassword_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.CurrentPassword
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.CurrentPassword
  nameWithType: UpdatePasswordRequest.CurrentPassword
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.NewPassword
  name: NewPassword
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdatePasswordRequest_NewPassword
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.NewPassword
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.NewPassword
  nameWithType: UpdatePasswordRequest.NewPassword
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.NewPassword*
  name: NewPassword
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdatePasswordRequest_NewPassword_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.NewPassword
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePasswordRequest.NewPassword
  nameWithType: UpdatePasswordRequest.NewPassword
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest
  name: UpdatePhoneNumberRequest
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest
  nameWithType: UpdatePhoneNumberRequest
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.PhoneNumber
  name: PhoneNumber
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdatePhoneNumberRequest_PhoneNumber
  commentId: P:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.PhoneNumber
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.PhoneNumber
  nameWithType: UpdatePhoneNumberRequest.PhoneNumber
- uid: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.PhoneNumber*
  name: PhoneNumber
  href: api/ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.html#ChristopherBriddock_Service_Identity_Models_Requests_UpdatePhoneNumberRequest_PhoneNumber_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.PhoneNumber
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Requests.UpdatePhoneNumberRequest.PhoneNumber
  nameWithType: UpdatePhoneNumberRequest.PhoneNumber
- uid: ChristopherBriddock.Service.Identity.Models.Responses
  name: ChristopherBriddock.Service.Identity.Models.Responses
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.html
  commentId: N:ChristopherBriddock.Service.Identity.Models.Responses
  fullName: ChristopherBriddock.Service.Identity.Models.Responses
  nameWithType: ChristopherBriddock.Service.Identity.Models.Responses
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse
  name: TokenResponse
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse
  nameWithType: TokenResponse
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.AccessToken
  name: AccessToken
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html#ChristopherBriddock_Service_Identity_Models_Responses_TokenResponse_AccessToken
  commentId: P:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.AccessToken
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.AccessToken
  nameWithType: TokenResponse.AccessToken
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.AccessToken*
  name: AccessToken
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html#ChristopherBriddock_Service_Identity_Models_Responses_TokenResponse_AccessToken_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.AccessToken
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.AccessToken
  nameWithType: TokenResponse.AccessToken
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.Expires
  name: Expires
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html#ChristopherBriddock_Service_Identity_Models_Responses_TokenResponse_Expires
  commentId: P:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.Expires
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.Expires
  nameWithType: TokenResponse.Expires
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.Expires*
  name: Expires
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html#ChristopherBriddock_Service_Identity_Models_Responses_TokenResponse_Expires_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.Expires
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.Expires
  nameWithType: TokenResponse.Expires
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.RefreshToken
  name: RefreshToken
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html#ChristopherBriddock_Service_Identity_Models_Responses_TokenResponse_RefreshToken
  commentId: P:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.RefreshToken
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.RefreshToken
  nameWithType: TokenResponse.RefreshToken
- uid: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.RefreshToken*
  name: RefreshToken
  href: api/ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.html#ChristopherBriddock_Service_Identity_Models_Responses_TokenResponse_RefreshToken_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.RefreshToken
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Responses.TokenResponse.RefreshToken
  nameWithType: TokenResponse.RefreshToken
- uid: ChristopherBriddock.Service.Identity.Models.Results
  name: ChristopherBriddock.Service.Identity.Models.Results
  href: api/ChristopherBriddock.Service.Identity.Models.Results.html
  commentId: N:ChristopherBriddock.Service.Identity.Models.Results
  fullName: ChristopherBriddock.Service.Identity.Models.Results
  nameWithType: ChristopherBriddock.Service.Identity.Models.Results
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult
  name: JwtResult
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html
  commentId: T:ChristopherBriddock.Service.Identity.Models.Results.JwtResult
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult
  nameWithType: JwtResult
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Error
  name: Error
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html#ChristopherBriddock_Service_Identity_Models_Results_JwtResult_Error
  commentId: P:ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Error
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Error
  nameWithType: JwtResult.Error
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Error*
  name: Error
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html#ChristopherBriddock_Service_Identity_Models_Results_JwtResult_Error_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Error
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Error
  nameWithType: JwtResult.Error
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Success
  name: Success
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html#ChristopherBriddock_Service_Identity_Models_Results_JwtResult_Success
  commentId: P:ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Success
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Success
  nameWithType: JwtResult.Success
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Success*
  name: Success
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html#ChristopherBriddock_Service_Identity_Models_Results_JwtResult_Success_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Success
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Success
  nameWithType: JwtResult.Success
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Token
  name: Token
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html#ChristopherBriddock_Service_Identity_Models_Results_JwtResult_Token
  commentId: P:ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Token
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Token
  nameWithType: JwtResult.Token
- uid: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Token*
  name: Token
  href: api/ChristopherBriddock.Service.Identity.Models.Results.JwtResult.html#ChristopherBriddock_Service_Identity_Models_Results_JwtResult_Token_
  commentId: Overload:ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Token
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Models.Results.JwtResult.Token
  nameWithType: JwtResult.Token
- uid: ChristopherBriddock.Service.Identity.Options
  name: ChristopherBriddock.Service.Identity.Options
  href: api/ChristopherBriddock.Service.Identity.Options.html
  commentId: N:ChristopherBriddock.Service.Identity.Options
  fullName: ChristopherBriddock.Service.Identity.Options
  nameWithType: ChristopherBriddock.Service.Identity.Options
- uid: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions
  name: ConfigureJwtBearerOptions
  href: api/ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.html
  commentId: T:ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions
  fullName: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions
  nameWithType: ConfigureJwtBearerOptions
- uid: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: ConfigureJwtBearerOptions(IConfiguration)
  href: api/ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.html#ChristopherBriddock_Service_Identity_Options_ConfigureJwtBearerOptions__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.ConfigureJwtBearerOptions(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ConfigureJwtBearerOptions.ConfigureJwtBearerOptions(IConfiguration)
  nameWithType.vb: ConfigureJwtBearerOptions.New(IConfiguration)
- uid: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.#ctor*
  name: ConfigureJwtBearerOptions
  href: api/ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.html#ChristopherBriddock_Service_Identity_Options_ConfigureJwtBearerOptions__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.ConfigureJwtBearerOptions
  fullName.vb: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.New
  nameWithType: ConfigureJwtBearerOptions.ConfigureJwtBearerOptions
  nameWithType.vb: ConfigureJwtBearerOptions.New
- uid: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  name: Configure(JwtBearerOptions)
  href: api/ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.html#ChristopherBriddock_Service_Identity_Options_ConfigureJwtBearerOptions_Configure_Microsoft_AspNetCore_Authentication_JwtBearer_JwtBearerOptions_
  commentId: M:ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  fullName: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  nameWithType: ConfigureJwtBearerOptions.Configure(JwtBearerOptions)
- uid: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(System.String,Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  name: Configure(string?, JwtBearerOptions)
  href: api/ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.html#ChristopherBriddock_Service_Identity_Options_ConfigureJwtBearerOptions_Configure_System_String_Microsoft_AspNetCore_Authentication_JwtBearer_JwtBearerOptions_
  commentId: M:ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(System.String,Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  name.vb: Configure(String, JwtBearerOptions)
  fullName: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(string?, Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  fullName.vb: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure(String, Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions)
  nameWithType: ConfigureJwtBearerOptions.Configure(string?, JwtBearerOptions)
  nameWithType.vb: ConfigureJwtBearerOptions.Configure(String, JwtBearerOptions)
- uid: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure*
  name: Configure
  href: api/ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.html#ChristopherBriddock_Service_Identity_Options_ConfigureJwtBearerOptions_Configure_
  commentId: Overload:ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Options.ConfigureJwtBearerOptions.Configure
  nameWithType: ConfigureJwtBearerOptions.Configure
- uid: ChristopherBriddock.Service.Identity.Program
  name: Program
  href: api/ChristopherBriddock.Service.Identity.Program.html
  commentId: T:ChristopherBriddock.Service.Identity.Program
  fullName: ChristopherBriddock.Service.Identity.Program
  nameWithType: Program
- uid: ChristopherBriddock.Service.Identity.Providers
  name: ChristopherBriddock.Service.Identity.Providers
  href: api/ChristopherBriddock.Service.Identity.Providers.html
  commentId: N:ChristopherBriddock.Service.Identity.Providers
  fullName: ChristopherBriddock.Service.Identity.Providers
  nameWithType: ChristopherBriddock.Service.Identity.Providers
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider
  name: IJsonWebTokenProvider
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html
  commentId: T:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider
  nameWithType: IJsonWebTokenProvider
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name: TryCreateRefreshTokenAsync(string, string, string, string, string, string)
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_IJsonWebTokenProvider_TryCreateRefreshTokenAsync_System_String_System_String_System_String_System_String_System_String_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name.vb: TryCreateRefreshTokenAsync(String, String, String, String, String, String)
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, string, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, String, String)
  nameWithType: IJsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, string, string)
  nameWithType.vb: IJsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, String, String)
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync*
  name: TryCreateRefreshTokenAsync
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_IJsonWebTokenProvider_TryCreateRefreshTokenAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateRefreshTokenAsync
  nameWithType: IJsonWebTokenProvider.TryCreateRefreshTokenAsync
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name: TryCreateTokenAsync(string, string, string, string, string, string)
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_IJsonWebTokenProvider_TryCreateTokenAsync_System_String_System_String_System_String_System_String_System_String_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name.vb: TryCreateTokenAsync(String, String, String, String, String, String)
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, string, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, String, String)
  nameWithType: IJsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, string, string)
  nameWithType.vb: IJsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, String, String)
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync*
  name: TryCreateTokenAsync
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_IJsonWebTokenProvider_TryCreateTokenAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryCreateTokenAsync
  nameWithType: IJsonWebTokenProvider.TryCreateTokenAsync
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name: TryValidateTokenAsync(string, string, string, string)
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_IJsonWebTokenProvider_TryValidateTokenAsync_System_String_System_String_System_String_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name.vb: TryValidateTokenAsync(String, String, String, String)
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
  nameWithType: IJsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  nameWithType.vb: IJsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
- uid: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync*
  name: TryValidateTokenAsync
  href: api/ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_IJsonWebTokenProvider_TryValidateTokenAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Providers.IJsonWebTokenProvider.TryValidateTokenAsync
  nameWithType: IJsonWebTokenProvider.TryValidateTokenAsync
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider
  name: JsonWebTokenProvider
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html
  commentId: T:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider
  nameWithType: JsonWebTokenProvider
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name: TryCreateRefreshTokenAsync(string, string, string, string, string, string)
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_JsonWebTokenProvider_TryCreateRefreshTokenAsync_System_String_System_String_System_String_System_String_System_String_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name.vb: TryCreateRefreshTokenAsync(String, String, String, String, String, String)
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, string, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, String, String)
  nameWithType: JsonWebTokenProvider.TryCreateRefreshTokenAsync(string, string, string, string, string, string)
  nameWithType.vb: JsonWebTokenProvider.TryCreateRefreshTokenAsync(String, String, String, String, String, String)
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync*
  name: TryCreateRefreshTokenAsync
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_JsonWebTokenProvider_TryCreateRefreshTokenAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateRefreshTokenAsync
  nameWithType: JsonWebTokenProvider.TryCreateRefreshTokenAsync
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name: TryCreateTokenAsync(string, string, string, string, string, string)
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_JsonWebTokenProvider_TryCreateTokenAsync_System_String_System_String_System_String_System_String_System_String_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync(System.String,System.String,System.String,System.String,System.String,System.String)
  name.vb: TryCreateTokenAsync(String, String, String, String, String, String)
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, string, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, String, String)
  nameWithType: JsonWebTokenProvider.TryCreateTokenAsync(string, string, string, string, string, string)
  nameWithType.vb: JsonWebTokenProvider.TryCreateTokenAsync(String, String, String, String, String, String)
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync*
  name: TryCreateTokenAsync
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_JsonWebTokenProvider_TryCreateTokenAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryCreateTokenAsync
  nameWithType: JsonWebTokenProvider.TryCreateTokenAsync
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name: TryValidateTokenAsync(string, string, string, string)
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_JsonWebTokenProvider_TryValidateTokenAsync_System_String_System_String_System_String_System_String_
  commentId: M:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync(System.String,System.String,System.String,System.String)
  name.vb: TryValidateTokenAsync(String, String, String, String)
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  fullName.vb: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
  nameWithType: JsonWebTokenProvider.TryValidateTokenAsync(string, string, string, string)
  nameWithType.vb: JsonWebTokenProvider.TryValidateTokenAsync(String, String, String, String)
- uid: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync*
  name: TryValidateTokenAsync
  href: api/ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.html#ChristopherBriddock_Service_Identity_Providers_JsonWebTokenProvider_TryValidateTokenAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Providers.JsonWebTokenProvider.TryValidateTokenAsync
  nameWithType: JsonWebTokenProvider.TryValidateTokenAsync
- uid: ChristopherBriddock.Service.Identity.Publishers
  name: ChristopherBriddock.Service.Identity.Publishers
  href: api/ChristopherBriddock.Service.Identity.Publishers.html
  commentId: N:ChristopherBriddock.Service.Identity.Publishers
  fullName: ChristopherBriddock.Service.Identity.Publishers
  nameWithType: ChristopherBriddock.Service.Identity.Publishers
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher
  name: EmailPublisher
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html
  commentId: T:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher
  nameWithType: EmailPublisher
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.#ctor(System.IServiceProvider)
  name: EmailPublisher(IServiceProvider)
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_EmailPublisher__ctor_System_IServiceProvider_
  commentId: M:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.EmailPublisher(System.IServiceProvider)
  fullName.vb: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.New(System.IServiceProvider)
  nameWithType: EmailPublisher.EmailPublisher(IServiceProvider)
  nameWithType.vb: EmailPublisher.New(IServiceProvider)
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.#ctor*
  name: EmailPublisher
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_EmailPublisher__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.EmailPublisher
  fullName.vb: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.New
  nameWithType: EmailPublisher.EmailPublisher
  nameWithType.vb: EmailPublisher.New
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage,System.Threading.CancellationToken)
  name: Publish(EmailMessage, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_EmailPublisher_Publish_ChristopherBriddock_Service_Common_Messaging_EmailMessage_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage, System.Threading.CancellationToken)
  nameWithType: EmailPublisher.Publish(EmailMessage, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.Publish*
  name: Publish
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_EmailPublisher_Publish_
  commentId: Overload:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.Publish
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.Publish
  nameWithType: EmailPublisher.Publish
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.ServiceProvider
  name: ServiceProvider
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_EmailPublisher_ServiceProvider
  commentId: P:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.ServiceProvider
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.ServiceProvider
  nameWithType: EmailPublisher.ServiceProvider
- uid: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.ServiceProvider*
  name: ServiceProvider
  href: api/ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_EmailPublisher_ServiceProvider_
  commentId: Overload:ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.ServiceProvider
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Publishers.EmailPublisher.ServiceProvider
  nameWithType: EmailPublisher.ServiceProvider
- uid: ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher
  name: IEmailPublisher
  href: api/ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.html
  commentId: T:ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher
  fullName: ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher
  nameWithType: IEmailPublisher
- uid: ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage,System.Threading.CancellationToken)
  name: Publish(EmailMessage, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_IEmailPublisher_Publish_ChristopherBriddock_Service_Common_Messaging_EmailMessage_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage, System.Threading.CancellationToken)
  nameWithType: IEmailPublisher.Publish(EmailMessage, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.Publish*
  name: Publish
  href: api/ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_IEmailPublisher_Publish_
  commentId: Overload:ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.Publish
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Publishers.IEmailPublisher.Publish
  nameWithType: IEmailPublisher.Publish
- uid: ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher
  name: NullEmailPublisher
  href: api/ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.html
  commentId: T:ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher
  fullName: ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher
  nameWithType: NullEmailPublisher
- uid: ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage,System.Threading.CancellationToken)
  name: Publish(EmailMessage, CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_NullEmailPublisher_Publish_ChristopherBriddock_Service_Common_Messaging_EmailMessage_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage,System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.Publish(ChristopherBriddock.Service.Common.Messaging.EmailMessage, System.Threading.CancellationToken)
  nameWithType: NullEmailPublisher.Publish(EmailMessage, CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.Publish*
  name: Publish
  href: api/ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.html#ChristopherBriddock_Service_Identity_Publishers_NullEmailPublisher_Publish_
  commentId: Overload:ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.Publish
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Publishers.NullEmailPublisher.Publish
  nameWithType: NullEmailPublisher.Publish
- uid: ChristopherBriddock.Service.Identity.Services
  name: ChristopherBriddock.Service.Identity.Services
  href: api/ChristopherBriddock.Service.Identity.Services.html
  commentId: N:ChristopherBriddock.Service.Identity.Services
  fullName: ChristopherBriddock.Service.Identity.Services
  nameWithType: ChristopherBriddock.Service.Identity.Services
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService
  name: AccountPurgeBackgroundService
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html
  commentId: T:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService
  nameWithType: AccountPurgeBackgroundService
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.#ctor(ChristopherBriddock.Service.Identity.Data.AppDbContext)
  name: AccountPurgeBackgroundService(AppDbContext)
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html#ChristopherBriddock_Service_Identity_Services_AccountPurgeBackgroundService__ctor_ChristopherBriddock_Service_Identity_Data_AppDbContext_
  commentId: M:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.#ctor(ChristopherBriddock.Service.Identity.Data.AppDbContext)
  name.vb: New(AppDbContext)
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AccountPurgeBackgroundService(ChristopherBriddock.Service.Identity.Data.AppDbContext)
  fullName.vb: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.New(ChristopherBriddock.Service.Identity.Data.AppDbContext)
  nameWithType: AccountPurgeBackgroundService.AccountPurgeBackgroundService(AppDbContext)
  nameWithType.vb: AccountPurgeBackgroundService.New(AppDbContext)
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.#ctor*
  name: AccountPurgeBackgroundService
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html#ChristopherBriddock_Service_Identity_Services_AccountPurgeBackgroundService__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AccountPurgeBackgroundService
  fullName.vb: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.New
  nameWithType: AccountPurgeBackgroundService.AccountPurgeBackgroundService
  nameWithType.vb: AccountPurgeBackgroundService.New
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AppDbContext
  name: AppDbContext
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html#ChristopherBriddock_Service_Identity_Services_AccountPurgeBackgroundService_AppDbContext
  commentId: P:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AppDbContext
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AppDbContext
  nameWithType: AccountPurgeBackgroundService.AppDbContext
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AppDbContext*
  name: AppDbContext
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html#ChristopherBriddock_Service_Identity_Services_AccountPurgeBackgroundService_AppDbContext_
  commentId: Overload:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AppDbContext
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.AppDbContext
  nameWithType: AccountPurgeBackgroundService.AppDbContext
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html#ChristopherBriddock_Service_Identity_Services_AccountPurgeBackgroundService_ExecuteAsync_System_Threading_CancellationToken_
  commentId: M:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType: AccountPurgeBackgroundService.ExecuteAsync(CancellationToken)
- uid: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.ExecuteAsync*
  name: ExecuteAsync
  href: api/ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.html#ChristopherBriddock_Service_Identity_Services_AccountPurgeBackgroundService_ExecuteAsync_
  commentId: Overload:ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.ExecuteAsync
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Services.AccountPurgeBackgroundService.ExecuteAsync
  nameWithType: AccountPurgeBackgroundService.ExecuteAsync
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests
  name: ChristopherBriddock.Service.Identity.Tests.IntegrationTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.html
  commentId: N:ChristopherBriddock.Service.Identity.Tests.IntegrationTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests
  nameWithType: ChristopherBriddock.Service.Identity.Tests.IntegrationTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests
  name: AuthoriseEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests
  nameWithType: AuthoriseEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: AuthoriseEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: AuthoriseEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.#ctor*
  name: AuthoriseEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.New
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpointTests
  nameWithType.vb: AuthoriseEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
  name: AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled()
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled*
  name: AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenTwoFactorIsEnabled
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
  name: AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed()
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed*
  name: AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus302Found_WhenValidCredentialsAreUsed
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
  name: AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials()
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials*
  name: AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus401Unauthorized_WhenUseInvalidValidCredentials
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
  name: AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown()
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown*
  name: AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_AuthoriseEndpointTests_AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
  nameWithType: AuthoriseEndpointTests.AuthoriseEndpoint_ReturnsStatus500InternalServerError_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests
  name: ConfirmEmailEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests
  nameWithType: ConfirmEmailEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: ConfirmEmailEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: ConfirmEmailEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.#ctor*
  name: ConfirmEmailEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.New
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpointTests
  nameWithType.vb: ConfirmEmailEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
  name: ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest()
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest*
  name: ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus500_WithInvalidRequest
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
  name: ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest()
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest*
  name: ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_200OKWithValidRequest
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
  name: ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound()
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound*
  name: ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_404WhenUserIsNotFound
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
  name: ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound()
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound*
  name: ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ConfirmEmailEndpointTests_ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
  nameWithType: ConfirmEmailEndpointTests.ConfirmEmailEndpoint_ReturnsStatus_500WhenUserIsNotFound
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests
  name: DeleteAccountEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests
  nameWithType: DeleteAccountEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: DeleteAccountEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: DeleteAccountEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.#ctor*
  name: DeleteAccountEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.New
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpointTests
  nameWithType.vb: DeleteAccountEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
  name: DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests_DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted()
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted*
  name: DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests_DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns204_WhenAccountIsDeleted
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
  name: DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests_DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized()
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized*
  name: DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests_DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns401_WhenUserIsUnauthorized
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
  name: DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests_DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown()
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown*
  name: DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_DeleteAccountEndpointTests_DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
  nameWithType: DeleteAccountEndpointTests.DeleteAccountEndpoint_Returns500_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests
  name: ForgotPasswordEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests
  nameWithType: ForgotPasswordEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: ForgotPasswordEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ForgotPasswordEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: ForgotPasswordEndpointTests.ForgotPasswordEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: ForgotPasswordEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.#ctor*
  name: ForgotPasswordEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ForgotPasswordEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.New
  nameWithType: ForgotPasswordEndpointTests.ForgotPasswordEndpointTests
  nameWithType.vb: ForgotPasswordEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
  name: ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ForgotPasswordEndpointTests_ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid()
  nameWithType: ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid*
  name: ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ForgotPasswordEndpointTests_ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
  nameWithType: ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns204NoContent_WhenRequestIsValid
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  name: ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ForgotPasswordEndpointTests_ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  nameWithType: ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown*
  name: ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ForgotPasswordEndpointTests_ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  nameWithType: ForgotPasswordEndpointTests.ForgotPasswordEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests
  name: LogoutEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests
  nameWithType: LogoutEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: LogoutEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: LogoutEndpointTests.LogoutEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: LogoutEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.#ctor*
  name: LogoutEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.New
  nameWithType: LogoutEndpointTests.LogoutEndpointTests
  nameWithType.vb: LogoutEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
  name: LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests_LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully()
  nameWithType: LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully*
  name: LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests_LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
  nameWithType: LogoutEndpointTests.LogoutEndpoint_Returns204NoContent_WhenUserLogsOutSuccessfully
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
  name: LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests_LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn()
  nameWithType: LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn*
  name: LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests_LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
  nameWithType: LogoutEndpointTests.LogoutEndpoint_Returns401Unauthorized_WhenNotLoggedIn
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  name: LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests_LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  nameWithType: LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown*
  name: LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_LogoutEndpointTests_LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  nameWithType: LogoutEndpointTests.LogoutEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests
  name: RefreshEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests
  nameWithType: RefreshEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: RefreshEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: RefreshEndpointTests.RefreshEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: RefreshEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.#ctor*
  name: RefreshEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.New
  nameWithType: RefreshEndpointTests.RefreshEndpointTests
  nameWithType.vb: RefreshEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
  name: RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests_RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed()
  nameWithType: RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed*
  name: RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests_RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
  nameWithType: RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidRefreshTokenIsUsed
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
  name: RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests_RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed()
  nameWithType: RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed*
  name: RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests_RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
  nameWithType: RefreshEndpointTests.RefreshEndpoint_Returns401_WhenInvalidTokenIsUsed
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  name: RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests_RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  nameWithType: RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown*
  name: RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RefreshEndpointTests_RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  nameWithType: RefreshEndpointTests.RefreshEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests
  name: RegisterEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests
  nameWithType: RegisterEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: RegisterEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: RegisterEndpointTests.RegisterEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: RegisterEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.#ctor*
  name: RegisterEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.New
  nameWithType: RegisterEndpointTests.RegisterEndpointTests
  nameWithType.vb: RegisterEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated
  name: RegisterEndpoint_Returns201Created_WhenUserIsCreated()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests_RegisterEndpoint_Returns201Created_WhenUserIsCreated
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated()
  nameWithType: RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated*
  name: RegisterEndpoint_Returns201Created_WhenUserIsCreated
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests_RegisterEndpoint_Returns201Created_WhenUserIsCreated_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated
  nameWithType: RegisterEndpointTests.RegisterEndpoint_Returns201Created_WhenUserIsCreated
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
  name: RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests_RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists()
  nameWithType: RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists*
  name: RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests_RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
  nameWithType: RegisterEndpointTests.RegisterEndpoint_Returns409Conflict_WhenUserAlreadyExists
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  name: RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests_RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
  nameWithType: RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown*
  name: RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_RegisterEndpointTests_RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
  nameWithType: RegisterEndpointTests.RegisterEndpoint_Returns500InternalServerError_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests
  name: ResetPasswordEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests
  nameWithType: ResetPasswordEndpointTests
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name: ResetPasswordEndpointTests(WebApplicationFactory<Program>)
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests__ctor_Microsoft_AspNetCore_Mvc_Testing_WebApplicationFactory_ChristopherBriddock_Service_Identity_Program__
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.#ctor(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory{ChristopherBriddock.Service.Identity.Program})
  name.vb: New(WebApplicationFactory(Of Program))
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetPasswordEndpointTests(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory<ChristopherBriddock.Service.Identity.Program>)
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.New(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory(Of ChristopherBriddock.Service.Identity.Program))
  nameWithType: ResetPasswordEndpointTests.ResetPasswordEndpointTests(WebApplicationFactory<Program>)
  nameWithType.vb: ResetPasswordEndpointTests.New(WebApplicationFactory(Of Program))
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.#ctor*
  name: ResetPasswordEndpointTests
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetPasswordEndpointTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.New
  nameWithType: ResetPasswordEndpointTests.ResetPasswordEndpointTests
  nameWithType.vb: ResetPasswordEndpointTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
  name: ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests_ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful()
  nameWithType: ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful*
  name: ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests_ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
  nameWithType: ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus204_WhenResetIsSuccessful
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
  name: ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests_ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed()
  nameWithType: ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed*
  name: ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests_ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
  nameWithType: ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus400_WhenUserIsNotConfirmed
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
  name: ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown()
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests_ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
  commentId: M:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown()
  nameWithType: ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown()
- uid: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown*
  name: ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
  href: api/ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.html#ChristopherBriddock_Service_Identity_Tests_IntegrationTests_ResetPasswordEndpointTests_ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.IntegrationTests.ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
  nameWithType: ResetPasswordEndpointTests.ResetEndpoint_ReturnsStatus500_WhenExceptionIsThrown
- uid: ChristopherBriddock.Service.Identity.Tests.Mocks
  name: ChristopherBriddock.Service.Identity.Tests.Mocks
  href: api/ChristopherBriddock.Service.Identity.Tests.Mocks.html
  commentId: N:ChristopherBriddock.Service.Identity.Tests.Mocks
  fullName: ChristopherBriddock.Service.Identity.Tests.Mocks
  nameWithType: ChristopherBriddock.Service.Identity.Tests.Mocks
- uid: ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock
  name: JsonWebTokenProviderMock
  href: api/ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock
  fullName: ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock
  nameWithType: JsonWebTokenProviderMock
- uid: ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  name: Mock()
  href: api/ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.html#ChristopherBriddock_Service_Identity_Tests_Mocks_JsonWebTokenProviderMock_Mock
  commentId: M:ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  fullName: ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock()
  nameWithType: JsonWebTokenProviderMock.Mock()
- uid: ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock*
  name: Mock
  href: api/ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.html#ChristopherBriddock_Service_Identity_Tests_Mocks_JsonWebTokenProviderMock_Mock_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.Mocks.JsonWebTokenProviderMock.Mock
  nameWithType: JsonWebTokenProviderMock.Mock
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests
  name: ChristopherBriddock.Service.Identity.Tests.UnitTests
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.html
  commentId: N:ChristopherBriddock.Service.Identity.Tests.UnitTests
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests
  nameWithType: ChristopherBriddock.Service.Identity.Tests.UnitTests
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests
  name: ConfigureJwtBearerOptionsTests
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests
  nameWithType: ConfigureJwtBearerOptionsTests
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.#ctor
  name: ConfigureJwtBearerOptionsTests()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests__ctor
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.#ctor
  name.vb: New()
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.ConfigureJwtBearerOptionsTests()
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.New()
  nameWithType: ConfigureJwtBearerOptionsTests.ConfigureJwtBearerOptionsTests()
  nameWithType.vb: ConfigureJwtBearerOptionsTests.New()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.#ctor*
  name: ConfigureJwtBearerOptionsTests
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.ConfigureJwtBearerOptionsTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.New
  nameWithType: ConfigureJwtBearerOptionsTests.ConfigureJwtBearerOptionsTests
  nameWithType.vb: ConfigureJwtBearerOptionsTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly
  name: Configure_Should_Set_Audience_Correctly()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests_Configure_Should_Set_Audience_Correctly
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly()
  nameWithType: ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly*
  name: Configure_Should_Set_Audience_Correctly
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests_Configure_Should_Set_Audience_Correctly_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly
  nameWithType: ConfigureJwtBearerOptionsTests.Configure_Should_Set_Audience_Correctly
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly
  name: Configure_Should_Set_Issuer_Correctly()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests_Configure_Should_Set_Issuer_Correctly
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly()
  nameWithType: ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly*
  name: Configure_Should_Set_Issuer_Correctly
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests_Configure_Should_Set_Issuer_Correctly_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly
  nameWithType: ConfigureJwtBearerOptionsTests.Configure_Should_Set_Issuer_Correctly
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly
  name: Configure_Should_Set_Secret_Correctly()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests_Configure_Should_Set_Secret_Correctly
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly()
  nameWithType: ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly*
  name: Configure_Should_Set_Secret_Correctly
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests_Configure_Should_Set_Secret_Correctly_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly
  nameWithType: ConfigureJwtBearerOptionsTests.Configure_Should_Set_Secret_Correctly
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests._sut
  name: _sut
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_ConfigureJwtBearerOptionsTests__sut
  commentId: F:ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests._sut
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.ConfigureJwtBearerOptionsTests._sut
  nameWithType: ConfigureJwtBearerOptionsTests._sut
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests
  name: EmailPublisherTests
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests
  nameWithType: EmailPublisherTests
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  name: PublishIsSuccessfulWithCorrectMessage()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_EmailPublisherTests_PublishIsSuccessfulWithCorrectMessage
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage()
  nameWithType: EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage*
  name: PublishIsSuccessfulWithCorrectMessage
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_EmailPublisherTests_PublishIsSuccessfulWithCorrectMessage_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
  nameWithType: EmailPublisherTests.PublishIsSuccessfulWithCorrectMessage
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests
  name: JsonWebTokenProviderTests
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html
  commentId: T:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests
  nameWithType: JsonWebTokenProviderTests
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.#ctor
  name: JsonWebTokenProviderTests()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests__ctor
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.#ctor
  name.vb: New()
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.JsonWebTokenProviderTests()
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.New()
  nameWithType: JsonWebTokenProviderTests.JsonWebTokenProviderTests()
  nameWithType.vb: JsonWebTokenProviderTests.New()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.#ctor*
  name: JsonWebTokenProviderTests
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests__ctor_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.JsonWebTokenProviderTests
  fullName.vb: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.New
  nameWithType: JsonWebTokenProviderTests.JsonWebTokenProviderTests
  nameWithType.vb: JsonWebTokenProviderTests.New
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  name: TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided()
  nameWithType: JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided*
  name: TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
  nameWithType: JsonWebTokenProviderTests.TryCreateTokenAsync_ShouldCreateToken_WhenValidParametersAreProvided
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  name: TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided()
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided*
  name: TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldFail_WhenInvalidTokenIsProvided
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  name: TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided()
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  commentId: M:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided()
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided()
- uid: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided*
  name: TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  href: api/ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.html#ChristopherBriddock_Service_Identity_Tests_UnitTests_JsonWebTokenProviderTests_TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided_
  commentId: Overload:ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  isSpec: "True"
  fullName: ChristopherBriddock.Service.Identity.Tests.UnitTests.JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
  nameWithType: JsonWebTokenProviderTests.TryValidateTokenAsync_ShouldValidateToken_WhenValidTokenIsProvided
